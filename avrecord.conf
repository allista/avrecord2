##################################################################
#                 avrecord configuration file                    #
##################################################################


#######filenames settings#########################################
#
#defines path and name for logfile
log_file   = ./avrecord.log

#defines output directory were generated movies will be saved
output_dir = ./

#defines name template for output movies
filename   = movie-%Y-%m-%d_%H-%M-%S.avi
#
##################################################################


#######video parameters###########################################
#
#video device file
video_device = /dev/video0

#name of video codec
video_codec  = msmpeg4 #see ffmpeg -formats for details

#0 (TV), 1 (COMPOSITE1), 2 (COMPOSITE2), 3 (SVIDEO)
input_source = 0

#The video norm to use (only for video capture and TV tuner cards)
#Values: 0 = PAL; 1 = NTSC; 2 = SECAM; 3 = PAL-NC; 4 = PAL-M; 5 = PAL-N; 6 = NTSC-JP; 7 = PAL-60;
input_mode   = 0

#width of the image
width        = 640 #640

#haight of the image
height       = 480 #480

#frames per second
frame_rate   = 24

#if true, automaticaly measure frame rate during initialization
auto_frate   = yes

#bits per second (not kilobits!!!)
vid_bitrate  = 2500000

#quantizer value for variable bitrate
#0 for constant bitrate, 2-31 for variable with different
#quality (2 -- is the best, 31 -- is the worst)
var_bitrate  = 2

#Picture brightness (0-100) (leave empty to use current capture card settings)
brightness = 50

#Picture contrast (0-100) (leave empty to use current capture card settings)
contrast   = 40

#Picture hue (0-100) (colour only) (leave empty to use current capture card settings)
hue        = 50

#Picture colour (0-100) (colour only) (leave empty to use current capture card settings)
color      = 40

#Picture whiteness (0-100) (greyscale only) (leave empty to use current capture card settings)
witeness   = 0
#
##################################################################


#######audio parameters###########################################
#
#name of audio codec
audio_codec  = mp3 #see ffmpeg -formats for details

#samples per second
sample_rate  = 44100

#bits per second (not kilobits!!!)
aud_bitrate  = 96000

#number of audio channel
channels     = 1

#number of desired buffer length (in frames) (0 is auto)
audio_buffer = 0

#each audio sample will be multiplied on this value
amplification_level = 1
#
##################################################################


#######flags #####################################################
#
#if true, do motion detection
detect_motion    = yes

#if true, do noise detection
detect_noise     = yes

#if true, record only when motion (or noise, if
#correspondig flag is set) is detected
record_on_motion = yes

#if true, record only when noise (or motion, if
#correspondig flag is set) is detected
record_on_noise  = yes

#if true, print number of motion pixels to the image
print_diffs      = yes

#if true, print sound noise level
print_level      = yes

#if true, print current date to the image
print_date       = yes
##################################################################


#######schedule settings##########################################
#
#defines time, when recording will be started
start_time = #dd.mm.yyyy-hh:mm:ss

#defines time, when recording will be finished
end_time   = #dd.mm.yyyy-hh:mm:ss

#list of timestamp pairs.
#If not empty, record only when current time is between any pair.
schedule   = #07:30:00-23:59:59;00:00:00-03:00:00;
#hh:mm:ss-hh:mm:ss;hh:mm:ss-hh:mm:ss;...
#
##################################################################


#######motion detection parameters################################
#
#time of no_motion that is required for starting new movie file
min_gap            = 10 #in seconds

#movie duratioin that is required for starting new movie file
min_record_time    = 1  #in minutes

#when ther's no motion, continue recordig during this time
post_motion_offset = 5  #in seconds

#number of frames to write before the one on wich motion (or noise) was detected
latency = 50	#value: 2 or grater

#step in frames between the two compared ones
frames_step = 4 #value: 1 or grater

#when detecting a motion, difference between two pixels is
#compared with this value
noise_level = 15

#we detect a motion when number of motion pixels is grater
#than this value
threshold   = 100 #25

#step in pixels that is used when difference between frames is measured
pixels_step = 1

#shows, how many times we need to erode captured image to
#remove a noise
noise_reduction_level = 1

#function for sound noise level calculation: 0 - linear (default)
#1 - 2pwr root, 2 - 4pwr root, 3 - 8pwr root, 4 - 2pwr, 5 - 4pwr, 6 - 8pwr
snd_noise_level_func = 1

#we detect sound noise when noise level calculated with
#"noise_level_function" is grater than this value (0 - 1000)
snd_noise_threshold  = 350 #300
#
##################################################################
